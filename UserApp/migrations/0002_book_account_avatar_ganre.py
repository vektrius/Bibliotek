# Generated by Django 4.0.4 on 2022-06-03 20:32

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('UserApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Название книги')),
                ('author', models.CharField(max_length=40, verbose_name='Автор')),
                ('description', models.TextField(verbose_name='Описание')),
                ('cover', models.ImageField(upload_to='books/cover', verbose_name='Обложка книги')),
                ('file', models.FileField(upload_to='books/text_files/', verbose_name='Файл книги')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='avatar',
            field=models.ImageField(default=1, upload_to='account/avatar', verbose_name='Фото профиля'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Ganre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Детектив', 'Детектив'), ('Фантастика', 'Фантастика'), ('Приключения', 'Приключения'), ('Роман', 'Роман'), ('Научная книга', 'Научная книга'), ('Фольклор', 'Фольклор'), ('Юмор', 'Юмор'), ('Справочная книга', 'Справочная книга'), ('Поэзия', 'Поэзия'), ('Детская книга', 'Детская книга'), ('Документальная литература', 'Документальная литература'), ('Деловая литература', 'Деловая литература'), ('Религиозная литература', 'Религиозная литература'), ('Учебная книга', 'Учебная книга'), ('Книги о психологии', 'Книги о психологии'), ('Хобби', 'Хобби'), ('Зарубежная', 'Зарубежная'), ('Техника', 'Техника')], max_length=40, verbose_name='Жанр')),
                ('book', models.ManyToManyField(related_name='books', to='UserApp.book')),
            ],
        ),
    ]
